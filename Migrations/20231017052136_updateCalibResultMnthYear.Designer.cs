// <auto-generated />
using System;
using Calibration_Management_System.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Calibration_Management_System.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231017052136_updateCalibResultMnthYear")]
    partial class updateCalibResultMnthYear
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Calibration_Management_System.Models.CalibrationNotice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("fld_calibMonth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_calibYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fld_dateApproved")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fld_dateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("fld_pathEQP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_pathJIG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_stat")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CalibrationNotice_table");
                });

            modelBuilder.Entity("Calibration_Management_System.Models.CalibrationResultEQP", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("calibrationdate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_CalibFR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_actualCalibDueDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_appStandardEqp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_calibDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_calibDisSusForm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_calibMonth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_calibYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_changeSticker")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_codeNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_ctrlNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_dateRecv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_dateReturned")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_eqpModelNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_eqpName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_imte")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_incharge")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_internalExternal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_month")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_nextCalibDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_nextCalibMonth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_nextCalibYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_passFail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_pathDoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_pathIMG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_reqFunction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_serial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_stat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_supplierExternal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_term")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_withCalibResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_withNC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("CalibrationResultEQP");
                });

            modelBuilder.Entity("Calibration_Management_System.Models.CalibrationResultJIG", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("calibrationdate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_CalibFR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_actualCalibDueDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_calibDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_calibDisSusForm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_calibMonth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_calibYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_changeSticker")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_codeNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_ctrlNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_dateRecv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_dateReturned")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_drawingNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_imte")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_incharge")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_internalExternal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_jigName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_month")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_nextCalibDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_nextCalibMonth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_nextCalibYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_passfail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_pathDoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_pathIMG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_reqFunction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_term")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_withCalibResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_withNC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("CalibrationResultJIG");
                });

            modelBuilder.Entity("Calibration_Management_System.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category_")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Category_table");
                });

            modelBuilder.Entity("Calibration_Management_System.Models.EmailList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("fld_contactPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_dept")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_emailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmailList_table");
                });

            modelBuilder.Entity("Calibration_Management_System.Models.EquipmentCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EquipmentCode_")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EquipmentCode_table");
                });

            modelBuilder.Entity("Calibration_Management_System.Models.EquipmentRegistration", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("fld_appStandardEqp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fld_calibDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("fld_calibMonth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_calibResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_calibYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_code2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_codeNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_ctrlNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_division")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_eqpModelNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_eqpName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_imgResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_imte")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_internalExternal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fld_nextCalibDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("fld_nextCalibMonth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_nextCalibYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_passFail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_pathDoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_pathIMG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fld_registrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("fld_reqFunction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_serial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_stat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_supplierExternal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_term")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_updatedToMasterlist")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_updatedToSystem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_withDisSus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_withFailureReport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_withNCR")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Equipment_table");
                });

            modelBuilder.Entity("Calibration_Management_System.Models.FailureReport", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("fld_EquipName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_contents")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_ctrlNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_dateIssue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_deptsec")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_incharge")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_mainincharge")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_pathDoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_pathIMG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_qty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_reportNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("FailureReport_table");
                });

            modelBuilder.Entity("Calibration_Management_System.Models.GeneralForm", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("fld_appEquipment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_dateEst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_docNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_no")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_rev")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("GeneralForm_table");
                });

            modelBuilder.Entity("Calibration_Management_System.Models.JigRegistration", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime?>("fld_calibDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("fld_calibMonth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_calibYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_codeNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_ctrlNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_division")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_drawingNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_imte")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_internalExternal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_jigName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fld_nextCalibDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("fld_nextCalibMonth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_nextCalibYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_passfail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_pathDoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_pathIMG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fld_registrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("fld_remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_reqFunction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_serialNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_stat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_term")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Jig_table");
                });

            modelBuilder.Entity("Calibration_Management_System.Models.Months", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Months_")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Months_table");
                });

            modelBuilder.Entity("Calibration_Management_System.Models.NCR", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("fld_IssueTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_calibReportNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_contents")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_ctrlNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_dateCompleted")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_dateIssue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_giveDisposeSuspendedForm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_givenTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_mainIncharge")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_modelNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_nonConReportNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_pathDoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_pathIMG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_qty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_rcvDisposeSuspendedForm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_withDisposalForm")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("NCR_table");
                });

            modelBuilder.Entity("Calibration_Management_System.Models.RegistrationClass", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("fld_approvedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_codeNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_ctrlNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fld_dateReg")
                        .HasColumnType("datetime2");

                    b.Property<string>("fld_drawingNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_emailOne")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_emailThree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_emailTwo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_eqpModelNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_eqpName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_incharge")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_jigCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_jigName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_reRegJigCtrlNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_receivedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_reqFunction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_serial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_submissionDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Registration_Table");
                });

            modelBuilder.Entity("Calibration_Management_System.Models.RequestingFunction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RequestingFunction_table");
                });

            modelBuilder.Entity("Calibration_Management_System.Models.SuspendDisposeRegistration", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("fld_approvedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_calibType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_ctrlNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fld_dateReg")
                        .HasColumnType("datetime2");

                    b.Property<string>("fld_disposalDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_drawingNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_fixedAsset")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_followUpDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_inchargeQA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_inchargeRequestor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_itemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_modelNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_nextFollowUp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_receivedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_reqFunction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_reqStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_requestBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_serial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_submitdate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_suspendedDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("SuspendDispose_table");
                });

            modelBuilder.Entity("Calibration_Management_System.Models.Terms", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Terms_")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Terms_table");
                });

            modelBuilder.Entity("Calibration_Management_System.Models.Uncontrolled", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("fld_commento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_maker")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_modelType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_nameEquip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_qty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_reasonUncontrolled")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_reqBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_reqDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fld_serial")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Uncontrolled_table");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Calibration_Management_System.Models.ApplicationUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("ApplicationUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
